import pygame
import random
import os

WIDTH = 800
HEIGHT = 600
FPS = 30
GROUND = HEIGHT - 30
SLOW = 3
FAST = 8

#PHYSICs
PLAYER_ACC = 0.9
PLAYER_FRICTION = -0.12
PLAYER_GRAV = 0.9
vec = pygame.math.Vector2

#DEFINE COLORS

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
GRAY = (128, 128, 128)

#ASSET FOLDERS
game_folder = os.path.dirname(__file__)
img_folder = os.path.join(game_folder, "img")

#PLAYER CLASS
class Player (pygame.sprite.Sprite):
      def __init__(self):
            pygame.sprite.Sprite.__init__(self)
            self.image = pygame.image.load(os.path.join(img_folder, "xd3.png")).convert()
            self.image.set_colorkey(BLACK)
            self.rect = self.image.get_rect()

            self.pos = vec(10, GROUND - 60)
            self.vel = vec(0, 0)
            self.acc = vec(0, 0)

      def update(self):

            self.acc = vec(0, PLAYER_GRAV)

            # RETURNS A LIST, keystate, OF ALL PRESSED KEYS
            keystate = pygame.key.get_pressed()
            # CHECKS TO SEE WHICH KEYS WERE IN THE LIST (A.K.A. PRESSED)
            if keystate[pygame.K_d]:
                  self.acc.x += PLAYER_ACC
            if keystate[pygame.K_a]:
                  self.acc.x += -PLAYER_ACC
            if keystate[pygame.K_w]:
                  self.rect.y += -5
            if keystate[pygame.K_s]:
                  self.rect.y += 5
            if self.vel.y == 0 and keystate[pygame.K_SPACE]:
                  self.vel.y = -20

            self.acc.x += self.vel.x * PLAYER_FRICTION

      #EQUATIONS OF MOTION
      self.vel += self.acc
      self.pos += self.vel + 0.5 * self.acc

      if self.pos

#INITIALIZE VARIABLES
pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("My Game")

clock = pygame.time.Clock()

#SPRITE GROUPS
all_sprites = pygame.sprite.Group()
player = Player()
all_sprites.add(player)

# GAME LOOP:
# Process Events
# Update
# DRAW
running = True
while running:
      
      clock.tick(FPS)
      
      #PROCESS EVENTS
      for event in pygame.event.get():
            if event.type == pygame.QUIT:
                  running = False

      #UPDATE
      all_sprites.update()
      
      #DRAW
      screen.fill(GRAY)
      all_sprites.draw(screen)

      #FLIP AFTER DRAWING
      pygame.display.flip()
pygame.quit()
